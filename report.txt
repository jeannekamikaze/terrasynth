2013.02.28

-- File I/O

Optimised file i/o by replacing 'toList' with a custom C function.

This brought file i/o from 62.5% running time to 18% and got rid of the space leak.

-- matrix

Optimised the 'matrix' function by creating the image on the gpu. The 'matrix' function was
renamed to 'pixels'.

The running time is now due to image creation, which is what we were looking for.

Current speedup for Perlin image creation of size 8192x8192 is 4x. Of course, the profiler won't show the time taken to transfer data between the cpu and the gpu, and it seems that that is currently the bottleneck. The Perlin function is perhaps so simple that the gpu has very little work to do; hopefully fBm will confirm this and we'll see much greater speedups.

2013.03.01

Implemented Perlin in Cuda. Accelerate program is actually faster.

The problem now is that the Accelerate fBm implementation makes the code generator act funky and overall the Accelerate program becomes slower than the C serial program when the number of iterations is increased (8+).
